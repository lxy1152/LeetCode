package main

import "sort"

/*
5724. 绝对差值和 显示英文描述
通过的用户数425
尝试过的用户数579
用户总通过次数426
用户总提交次数882
题目难度Medium
给你两个正整数数组 nums1 和 nums2 ，数组的长度都是 n 。

数组 nums1 和 nums2 的 绝对差值和 定义为所有 |nums1[i] - nums2[i]|（0 <= i < n）的 总和（下标从 0 开始）。

你可以选用 nums1 中的 任意一个 元素来替换 nums1 中的 至多 一个元素，以 最小化 绝对差值和。

在替换数组 nums1 中最多一个元素 之后 ，返回最小绝对差值和。因为答案可能很大，所以需要对 109 + 7 取余 后返回。

|x| 定义为：

如果 x >= 0 ，值为 x ，或者
如果 x <= 0 ，值为 -x


示例 1：

输入：nums1 = [1,7,5], nums2 = [2,3,5]
输出：3
解释：有两种可能的最优方案：
- 将第二个元素替换为第一个元素：[1,7,5] => [1,1,5] ，或者
- 将第二个元素替换为第三个元素：[1,7,5] => [1,5,5]
两种方案的绝对差值和都是 |1-2| + (|1-3| 或者 |5-3|) + |5-5| = 3
示例 2：

输入：nums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]
输出：0
解释：nums1 和 nums2 相等，所以不用替换元素。绝对差值和为 0
示例 3：

输入：nums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]
输出：20
解释：将第一个元素替换为第二个元素：[1,10,4,4,2,7] => [10,10,4,4,2,7]
绝对差值和为 |10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 20


提示：

n == nums1.length
n == nums2.length
1 <= n <= 105
1 <= nums1[i], nums2[i] <= 105
*/

func minAbsoluteSumDiff(nums1 []int, nums2 []int) int {
	temp := make([]int, len(nums1))
	max := 0
	var min int = 10e9
	stack := make([]int, 0)
	for i := 0; i < len(nums1); i++ {
		temp[i] = abs(nums1[i] - nums2[i])
		if temp[i] >= max {
			max = temp[i]
		}
	}
	for i := 0; i < len(nums1); i++ {
		temp[i] = abs(nums1[i] - nums2[i])
		if temp[i] >= max {
			stack = append(stack, i)
		}
	}
	sss := nums1
	sort.Ints(sss)
	dp := make([]int, len(nums1)+1)
	for i := 1; i < len(dp); i++ {
		dp[i] = temp[i-1] + dp[i-1]
	}
	if dp[len(nums1)] == 0 {
		return 0
	}

	if len(stack) > 100 {
		stack = stack[:10]
	}
	for i := 0; i < len(stack); i++ {
		var min1 int = 10e9
		for j := range sss {
			if j != stack[i] && abs(sss[j]-nums2[stack[i]]) < min1 {
				min1 = abs(sss[j] - nums2[stack[i]])
			}
			if abs(sss[j]-nums2[stack[i]]) > min1 {
				break
			}
		}
		if min1 < min {
			min = min1
		}
	}

	return (dp[len(nums1)] - (max - min)) % (10e8 + 7)
}
func abs(a int) int {
	if a > 0 {
		return a
	}
	return -a
}

func main() {
	print(minAbsoluteSumDiff([]int{38, 48, 73, 55, 25, 47, 45, 62, 15, 34, 51, 20, 76, 78, 38, 91, 69, 69, 73, 38, 74, 75, 86, 63, 73, 12, 100, 59, 29, 28, 94, 43, 100, 2, 53, 31, 73, 82, 70, 94, 2, 38, 50, 67, 8, 40, 88, 87, 62, 90, 86, 33, 86, 26, 84, 52, 63, 80, 56, 56, 56, 47, 12, 50, 12, 59, 52, 7, 40, 16, 53, 61, 76, 22, 87, 75, 14, 63, 96, 56, 65, 16, 70, 83, 51, 44, 13, 14, 80, 28, 82, 2, 5, 57, 77, 64, 58, 85, 33, 24}, []int{90, 62, 8, 56, 33, 22, 9, 58, 29, 88, 10, 66, 48, 79, 44, 50, 71, 2, 3, 100, 88, 16, 24, 28, 50, 41, 65, 59, 83, 79, 80, 91, 1, 62, 13, 37, 86, 53, 43, 49, 17, 82, 27, 17, 10, 89, 40, 82, 41, 2, 48, 98, 16, 43, 62, 33, 72, 35, 10, 24, 80, 29, 49, 5, 14, 38, 30, 48, 93, 86, 62, 23, 17, 39, 40, 96, 10, 75, 6, 38, 1, 5, 54, 91, 29, 36, 62, 73, 51, 92, 89, 88, 74, 91, 87, 34, 49, 56, 33, 67}))
}
